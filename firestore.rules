
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // For admin functionality, replace with actual UIDs from Firebase Auth
    function isAdmin() {
      return request.auth.uid == "s5iS6mNTh2V14t3tZ233iJqgP3z1" // admin@yaatrasetu.com
          || request.auth.uid == "SGFh5V3i75Yh3hT2v32SgT3bEa2g"; // Krish@yaatrasetu.com
    }
    
    // Users can only read/write their own profile data.
    match /users/{userId} {
      allow read, update, delete: if request.auth.uid == userId;
      allow create: if request.auth.uid != null;
      
      // Users can only manage their own saved passengers.
      match /passengers/{passengerId} {
        allow read, write, delete: if request.auth.uid == userId;
      }
    }
    
    // Hotels can be read by anyone, but only written by admins.
    match /hotels/{hotelId} {
      allow read: if true;
      allow write: if request.auth != null && isAdmin();
    }
    
    // Tatkal requests can only be created by authenticated users.
    // Reading them is restricted by queries in the app logic.
    match /tatkal_requests/{requestId} {
      allow read, write: if request.auth.uid == request.resource.data.userId;
    }
    
    // Bookings can be created by authenticated users.
    // Users can only read their own bookings.
    match /bookings/{bookingId} {
      allow create: if request.auth.uid == request.resource.data.userId;
      allow read: if request.auth.uid == resource.data.userId;
    }
    
     // Chatbot logs can only be created by authenticated users.
    match /chatbot_logs/{logId} {
      allow create: if request.auth != null;
    }

    // Grant broader read access for admin stats
    match /users/{userId} {
      allow list: if request.auth != null && isAdmin();
    }

     match /bookings/{bookingId} {
      allow list: if request.auth != null && isAdmin();
    }
  }
}
